# SPDX-FileCopyrightText: 2022 Magenta ApS
# SPDX-License-Identifier: MPL-2.0

stages:
  - lint
  - test
  - coverage
  - build
  - release
  - deploy


variables:
  IMAGE_SHA: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}

  RELEASE_REGISTRY: docker.io
  RELEASE_REGISTRY_IMAGE: index.docker.io/magentaaps/os2mo-amqp-trigger-elevate-manager

  PYTEST_COV_MODULE: amqp_trigger_elevate_manager
  PYTEST_COV_FAIL_UNDER: 100
  PYTEST_EXTRA_FLAGS: "-n auto"

  PRECOMMIT_USE_POETRY: "true"
  POETRY_VERSION: 1.2.2


# Conditions
#############
.if-default-branch-refs: &if-default-branch-refs
  if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'

.if-tag: &if-tag
  if: '$CI_COMMIT_TAG'

.if-merge-request: &if-merge-request
  if: '$CI_MERGE_REQUEST_IID'


# Workflow
###########
workflow:
  rules:
    - <<: *if-tag
      variables:
        # Override the IMAGE_SHA variable on tag pipelines to avoid both the default
        # branch pipeline and tag pipeline overriding each other's images arbitrarily when
        # they are both running at the same time on master.
        IMAGE_SHA: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}
    - <<: *if-default-branch-refs
    - <<: *if-merge-request




include:
  - project: labs/salt-automation
    ref: master
    file: /gitlab-ci-templates/common/autopub.v1.yml

    # Runs testing
  - project: labs/salt-automation
    ref: master
    file: /gitlab-ci-templates/python/pytest.v1.yml

  - project: labs/salt-automation
    ref: master
    file: /gitlab-ci-templates/common/docker-release.v1.yml
  - project: labs/salt-automation
    ref: master
    file: /gitlab-ci-templates/common/docker-build-meta.v2.yml
  - project: labs/salt-automation
    ref: master
    file: /gitlab-ci-templates/common/pre-commit.v1.yml
  - project: labs/salt-automation
    ref: master
    file: /gitlab-ci-templates/common/config-updater-meta.v1.yml
  - project: labs/salt-automation
    ref: master
    file: /gitlab-ci-templates/common/conventional-commits.v1.yml
  - project: labs/salt-automation
    ref: master
    file: /gitlab-ci-templates/python/pypi-cc.v1.yml


# Build
########
Build:
  extends: .build-docker
  variables:
    BUILD_DOCKER_EXTRA_FLAGS: "--build-arg=COMMIT_SHA=${CI_COMMIT_SHA} --build-arg=COMMIT_TAG=${CI_COMMIT_TAG}"


Build TestImage:
  extends: .build-docker
  variables:
    DOCKERFILE: ${CI_PROJECT_DIR}/Dockerfile
    BUILD_DOCKER_EXTRA_FLAGS: "--build-arg=COMMIT_SHA=${CI_COMMIT_SHA} --build-arg=COMMIT_TAG=${CI_COMMIT_TAG}"


## Test stage
#############
#.test-python:
#  stage: test
#  needs: [ "Build TestImage" ]
#  image:
#    name: ${IMAGE_SHA}
#  services: [ ]
#  variables:
#    GIT_STRATEGY: none # We do not need the source code
#  before_script:
#    - cd /opt/tests/
#
#Test MO GraphQL functionalities:
#  extends: .test-python
#  script:
#    - python -m pytest test_mo.py -v
#
#Test Organisation Unit Level extraction:
#  extends: .test-python
#  script:
#    - python -m pytest test_ou_levels.py -v
